name: Build & Publish Docker Image
# https://www.docker.com/blog/first-docker-github-action-is-here
# https://github.com/docker/build-push-action
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [published, edited]

jobs:
  build-runtime:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        runtime_type: [all, onnxruntime, torchscript]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get release version
        id: get_version
        run: |
          VER=${GITHUB_REF##*/}
          echo "RELEASE_VERSION=$(${{ github.event_name == 'release' }} && echo "${VER//v}" || echo "$VER")" >> $GITHUB_ENV

      - uses: docker/setup-buildx-action@v1
      - name: Build and Publish Docker Image
        uses: docker/build-push-action@v1.1.0
        with:
          repository: nodefluxio/vortex
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          build_args: RUNTIME_TYPE=${{ matrix.runtime_type }}
          tags: "runtime-${{ matrix.runtime_type }}-${{ env.RELEASE_VERSION }}"
          target: runtime
          dockerfile: Dockerfile
          push: ${{ github.event_name == 'release' }}
        timeout-minutes: 55

  build-full:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get release version
        id: get_version
        run: |
          VER=${GITHUB_REF##*/}
          echo "RELEASE_VERSION=$(${{ github.event_name == 'release' }} && echo "${VER//v}" || echo "$VER")" >> $GITHUB_ENV

      - uses: docker/setup-buildx-action@v1
      - name: Build and Publish Docker Image
        uses: docker/build-push-action@v1.1.0
        with:
          repository: nodefluxio/vortex
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          build_args: RUNTIME_TYPE=all
          tags: "${{ env.RELEASE_VERSION }},latest"
          target: development
          dockerfile: Dockerfile
          push: ${{ github.event_name == 'release' }}
        timeout-minutes: 55
